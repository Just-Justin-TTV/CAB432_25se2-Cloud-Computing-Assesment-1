"""
Django settings for app1 project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path  # Using Path for cleaner, OS-independent path handling

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR points to the root directory of the Django project
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# This key is used for cryptographic signing, sessions, CSRF protection, etc.
SECRET_KEY = 'django-insecure-j0_9nwv@qs^@w=g=2j#$ziphq)f(gwhg-v*og)&@)h7+y%0z*%'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG=True provides detailed error pages and should only be used locally
DEBUG = True

# Hosts/domain names that are allowed to serve this Django app
ALLOWED_HOSTS = []  # Empty list means no external host can serve this in production


# Application definition
# INSTALLED_APPS contains all apps that are active for this project
INSTALLED_APPS = [
    'django.contrib.admin',        # Admin interface
    'django.contrib.auth',         # Authentication framework
    'app1',                        # Custom app for this project
    'django.contrib.contenttypes', # Required by Django's permissions system
    'django.contrib.sessions',     # Session management
    'django.contrib.messages',     # Messaging framework
    'tailwind',                    # Tailwind CSS integration
    'django.contrib.staticfiles',  # Static file handling (CSS, JS, images)
    'theme',                       # Tailwind theme app
    'django_browser_reload',       # Auto-reload browser for development
]

# Middleware stack processes requests/responses in order
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',        # Adds security-related headers
    'django.contrib.sessions.middleware.SessionMiddleware', # Enables session support
    'django.middleware.common.CommonMiddleware',            # Common HTTP headers & redirect support
    'django.middleware.csrf.CsrfViewMiddleware',            # CSRF protection
    'django.contrib.auth.middleware.AuthenticationMiddleware', # Associates users with requests
    'django.contrib.messages.middleware.MessageMiddleware',    # Enables flash messages
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  # Clickjacking protection
    "django_browser_reload.middleware.BrowserReloadMiddleware", # Reload browser automatically during dev
]

# Root URL configuration module
ROOT_URLCONF = 'app1.urls'

# Template configuration
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',  # Django's template engine
        'DIRS': [
            os.path.join(BASE_DIR, 'app1/templates'),  # Project-specific templates
            os.path.join(BASE_DIR, 'theme/templates'), # Tailwind theme templates
        ],
        'APP_DIRS': True,  # Automatically look for templates inside each app's "templates" folder
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',   # Adds debug info to templates
                'django.template.context_processors.request', # Makes the request object available
                'django.contrib.auth.context_processors.auth', # Adds user and permissions info
                'django.contrib.messages.context_processors.messages', # Adds messages framework data
            ],
        },
    },
]

# WSGI application for deployment (used by servers like Gunicorn or uWSGI)
WSGI_APPLICATION = 'app1.wsgi.application'


# Database configuration
# Using environment variables for credentials to make it flexible for different environments
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",            # MySQL database backend
        "NAME": os.environ.get("DB_NAME", "ifb398db"),   # Database name
        "USER": os.environ.get("DB_USER", "ifb398user"), # Database user
        "PASSWORD": os.environ.get("DB_PASSWORD", "ifb398pass"), # Password
        "HOST": os.environ.get("DB_HOST", "db"),         # Database host (default container name)
        "PORT": os.environ.get("DB_PORT", "3306"),       # Default MySQL port
    }
}


# Password validation - adds security checks for user passwords
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'}, # Prevents passwords too similar to user info
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},           # Minimum length requirement
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},          # Prevents common passwords
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},         # Prevents entirely numeric passwords
]

# APPEND_SLASH=False disables automatic redirecting of URLs without trailing slashes
APPEND_SLASH = False


# Internationalization
LANGUAGE_CODE = 'en-us'  # Default language
TIME_ZONE = 'UTC'        # Default timezone
USE_I18N = True          # Enable Django's translation system
USE_TZ = True            # Enable timezone-aware datetimes


# Static files (CSS, JavaScript, Images)
STATIC_URL = 'static/'  # URL path for serving static files during development


# Default primary key type for models that don't specify one explicitly
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Tailwind integration - specifies which app holds the Tailwind config
TAILWIND_APP_NAME = 'theme'

# Internal IPs for development tools like django-browser-reload
INTERNAL_IPS = [
    "127.0.0.1",
]
